<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.wpwk.mappers.ContentsMapper">

    <resultMap id ="User" type="com.ssafy.wpwk.model.User">
        <result column="user_id" property="id"/>
        <result column="nickname" property="nickname"/>
    </resultMap>

    <resultMap id="Contents" type="com.ssafy.wpwk.model.Contents">
        <result column="id" property="id"/>
        <result column="title" property="title"/>
        <result column="spend_time" property="spendTime"/>
        <result column="likes" property="likes"/>
        <result column="views" property="views"/>
        <result column="created_at" property="createdAt"/>
        <result column="created_by" property="createdBy"/>
        <collection property="user" resultMap="User"/>
    </resultMap>

    <!-- 컨텐츠 삽입 -->
    <insert id = "create" useGeneratedKeys="true" keyProperty="id" parameterType="com.ssafy.wpwk.model.Contents">
        INSERT INTO contents (title, spend_time, created_by, updated_by,user_id)
        VALUES(#{title}, #{spendTime}, #{createdBy}, #{updatedBy},#{user.id})
    </insert>

    <!--컨텐츠 전체 조회 -->
    <select id="findAllContents" resultMap="Contents">
        SELECT c.id,
               c.title,
               c.spend_time,
               c.likes,
               c.views,
               c.created_at,
               c.created_by,
               u.id as user_id,
               u.nickname
        FROM contents c, user u
        WHERE c.user_id = u.id
    </select>

    <!-- 컨텐츠 검색 이용한 조회 -->
    <select id="findContentsById" resultMap="Contents">
        SELECT c.id,
               c.title,
               c.spend_time,
               c.likes,
               c.views,
               c.created_at,
               c.created_by,
               u.id as user_id,
               u.nickname
        FROM contents c, user u
        WHERE c.user_id = u.id
        AND c.id = #{id}
    </select>

    <!-- 컨텐츠 검색 이용한 조회 -->
    <select id="findContentsByTagName" resultMap="Contents">
        SELECT DISTINCT c.id, c.user_id, c.title,
               c.spend_time, c.likes, c.views,
               c.created_at, c.updated_at, u.nickname
        FROM contents c
        JOIN contents_tag ct ON c.id = ct.contents_id
        JOIN tags t ON ct.tags_id = t.id
        JOIN user u ON c.user_id = u.id
        WHERE t.name LIKE CONCAT('%', #{tag}, '%')
    </select>

    <!-- 컨텐츠 검색 이용한 조회 (추가 수정 필요) -->
    <select id="findContentsByKeyword" resultType="com.ssafy.wpwk.model.Contents" parameterType="hashmap">
        SELECT c.id,
        c.title,
        c.spend_time,
        c.likes,
        c.views,
        c.created_at,
        c.created_by,
        u.id as user_id,
        u.nickname
        FROM contents
        <choose>
            <when test="option == 'tagName'">
                WHERE nickname = #{keyword}
            </when>
            <when test="option == 'nickname'">
                WHERE nickname = #{keyword}
            </when>
            <when test="option == 'title'">
                WHERE title = #{keyword}
            </when>
        </choose>
        ORDER BY id DESC;
    </select>

    <!--데이터 수정 -->
    <update id="update" parameterType="com.ssafy.wpwk.model.Contents">
        UPDATE contents SET
                           title = #{title},
                           spend_time = #{spendTime},
                           updated_at = #{updatedAt},
                           updated_by = #{updatedBy}
        WHERE id = #{id}
    </update>

    <!-- 컨텐츠 역량 수정 -->
    <update id="updateAbilities" parameterType="map">
        UPDATE contents
        SET ability1 = #{contentsAbility.abilities[0]},
            ability2 = #{contentsAbility.abilities[1]},
            ability3 = #{contentsAbility.abilities[2]},
            ability4 = #{contentsAbility.abilities[3]},
            ability5 = #{contentsAbility.abilities[4]},
            ability6 = #{contentsAbility.abilities[5]},
            ability7 = #{contentsAbility.abilities[6]},
            ability8 = #{contentsAbility.abilities[7]}
        WHERE id = #{id}
    </update>

    <!-- 데이터 삭제 -->
    <delete id="delete">
        DELETE FROM contents
        WHERE id = #{id}
    </delete>
</mapper>