<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ssafy.wpwk.mappers.ContentsMapper">

    <!-- 컨텐츠 삽입 -->
    <insert id = "create" useGeneratedKeys="true" keyProperty="id" parameterType="com.ssafy.wpwk.model.Contents">
        INSERT INTO contents (title, spend_time, ability, thumb,
                              created_by, updated_by, user_id)
        VALUES(#{title}, #{spendTime}, #{ability}, #{thumb},
               #{createdBy}, #{updatedBy}, #{userId})
    </insert>

    <!--컨텐츠 전체 조회 -->
    <select id="findAllContents" resultType="com.ssafy.wpwk.model.Contents">
        SELECT c.id,
               c.title,
               c.spend_time,
               c.likes,
               c.views,
               c.ability,
               c.thumb,
               c.created_at,
               c.created_by,
               u.id as user_id,
               u.nickname
        FROM contents c, user u
        WHERE c.user_id = u.id
        ORDER BY c.id DESC
    </select>

    <!--컨텐츠 페이지 별 조회 -->
    <select id="findAllContentsByPage" resultType="com.ssafy.wpwk.model.Contents">
        SELECT c.id,
               c.title,
               c.spend_time,
               c.likes,
               c.views,
               c.ability,
               c.thumb,
               c.created_at,
               c.created_by,
               u.id as user_id,
               u.nickname,
               CASE WHEN fc.id IS NULL THEN 'false' ELSE 'true' END as 'favorite'
        FROM contents c join user u ON c.user_id = u.id
        LEFT JOIN favorite_contents fc ON c.id =fc.contents_id and fc.user_id =#{userId}
        ORDER BY c.id DESC
        LIMIT 10 OFFSET #{offset}
    </select>

    <!-- 컨텐츠 검색 이용한 조회 -->
    <select id="findContentsById" resultType="com.ssafy.wpwk.model.Contents">
        SELECT c.id,
               c.title,
               c.spend_time,
               c.likes,
               c.views,
               c.ability,
               c.thumb,
               c.created_at,
               c.created_by,
               u.id as user_id,
               u.nickname
        FROM contents c, user u
        WHERE c.user_id = u.id
        AND c.id = #{id}
        ORDER BY c.id DESC
    </select>

    <!-- 태그를 이용한 컨텐츠 조회 -->
    <select id="findContentsByTag" resultType="com.ssafy.wpwk.model.Contents" parameterType="map">
        SELECT DISTINCT
                c.id,
                c.user_id,
                c.title,
                c.spend_time,
                c.likes,
                c.views,
                c.ability,
                c.thumb,
                c.created_at,
                c.updated_at,
                u.nickname,
               CASE WHEN fc.id IS NULL THEN 'false' ELSE 'true' END as 'favorite'
        FROM contents c
        JOIN contents_tag ct ON c.id = ct.contents_id
        JOIN tags t ON ct.tags_id = t.id
        JOIN user u ON c.user_id = u.id
        LEFT JOIN favorite_contents fc ON c.id =fc.contents_id and fc.user_id =#{userId}
        WHERE t.name = #{tag}
        ORDER BY c.id DESC
        LIMIT 10 OFFSET #{offset}
    </select>

    <!-- 키워드(제작자 이름, 제목)을 이용한 컨텐트 조회-->
    <select id="findContentsByKeyword" resultType="com.ssafy.wpwk.model.Contents" >
        SELECT DISTINCT c.id,
        c.title,
        c.spend_time,
        c.likes,
        c.views,
        c.created_at,
        c.created_by,
        u.id as user_id,
        u.nickname,
        CASE WHEN fc.id IS NULL THEN 'false' ELSE 'true' END as 'favorite'
        FROM contents c JOIN user u
        ON c.user_id = u.id
        LEFT JOIN favorite_contents fc ON c.id =fc.contents_id and fc.user_id =#{userId}
        WHERE nickname LIKE CONCAT('%',#{keyword},'%')
        OR title LIKE CONCAT('%',#{keyword},'%')
        ORDER BY id DESC
        LIMIT 10 OFFSET #{offset}
    </select>

    <!--데이터 수정 -->
    <update id="update" parameterType="com.ssafy.wpwk.model.Contents">
        UPDATE contents SET
                           title = #{title},
                           spend_time = #{spendTime},
                           ability = #{ability},
                           updated_at = #{updatedAt},
                           updated_by = #{updatedBy}
        WHERE id = #{id}
    </update>

    <!-- 데이터 삭제 -->
    <delete id="delete">
        DELETE FROM contents
        WHERE id = #{id}
    </delete>
</mapper>